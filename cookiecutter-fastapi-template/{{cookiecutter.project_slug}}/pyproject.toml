[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_description }}"
authors = [
    {name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}"}
]
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"
classifiers = [
    "Programming Language :: Python :: {{ cookiecutter.python_version }}",
    "License :: OSI Approved :: {{ cookiecutter.open_source_license }}",
    "Operating System :: OS Independent",
    "Framework :: FastAPI",
]

[project.urls]
"Homepage" = "https://github.com/{{ cookiecutter.author_name }}/{{ cookiecutter.project_slug }}"
"Bug Tracker" = "https://github.com/{{ cookiecutter.author_name }}/{{ cookiecutter.project_slug }}/issues"

{% if cookiecutter.use_pytest == "y" %}
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.run]
source = ["app"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
{% endif %}

[tool.black]
line-length = 88
target-version = ["py{{ cookiecutter.python_version.replace('.', '') }}"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
